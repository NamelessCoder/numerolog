#!/usr/bin/env php
<?php

$paths = array(
	__DIR__ . '/../',
	__DIR__ . '/../../../../',
);
foreach ($paths as $index => $path) {
	$path = rtrim(realpath($path)) . '/';
	if (file_exists($path . 'vendor/autoload.php')) {
		define('NUMEROLOG_HOME', $path);
		break;
	}
	$paths[$index] = $path;
}

if (!defined('NUMEROLOG_HOME')) {
	echo 'Error! Numerolog could not detect your vendor dir. Did you install using composer install?. We checked:' . PHP_EOL;
	foreach ($paths as $path) {
		echo ' * ' . $path . PHP_EOL;
	}
	exit(2);
}

define('NUMEROLOG_DATABASE_BASEDIR', NUMEROLOG_HOME . 'data/');

require_once NUMEROLOG_HOME . 'vendor/autoload.php';

$composerFile = NUMEROLOG_HOME . 'composer.json';
if (!file_exists($composerFile)) {
	echo 'Error! Numerolog only functions inside projects with a composer.json file (containing a "name")' . PHP_EOL;
	exit(1);
}

// Initialize our key variables for processing the command
$parameters = array_slice($argv, 1);
$query = new \NamelessCoder\Numerolog\Query($parameters);
$tokenSignature = sha1($query->getPackage());
$tokenFile = NUMEROLOG_HOME . '.numerolog-token-' . $tokenSignature;
$tokenFileExists = file_exists($tokenFile);
$composer = json_decode(file_get_contents($composerFile), JSON_OBJECT_AS_ARRAY);
$client = new \NamelessCoder\Numerolog\Client();

// Make decisions about configuring client and query based on key variables
if (isset($composer['extra']['namelesscoder/numerolog']['host'])) {
	$client->setEndPointUrl($composer['extra']['namelesscoder/numerolog']['host']);
}
if (!$query->getPackage()) {
	$query->setPackage($composer['name']);
}
if (!$query->getToken() && $tokenFileExists) {
	$query->setToken(trim(file_get_contents($tokenFile)));
}
$response = $client->query($query);
if ($query->getAction() === \NamelessCoder\Numerolog\Query::ACTION_SAVE && !$query->getToken() && !$tokenFileExists) {
	echo '!!! ATTENTION !!! ATTENTION !!! ATTENTION !!! ATTENTION !!! ATTENTION !!! ATTENTION !!!' . PHP_EOL;
	echo '!!! A token was generated remotely. Make sure you save it NOW! It CANNOT be retrieved!' . PHP_EOL;
	echo PHP_EOL;
	echo '--> Token:        ' . $response['token'] . PHP_EOL;
	echo '--> Token file:   ' . $tokenFile . PHP_EOL;
	echo PHP_EOL;
	echo '!!! Message will never be repeated!' . PHP_EOL;
	file_put_contents($tokenFile, $response['token']);
} else {
	echo json_encode($response) . PHP_EOL;
}
